{
  "contractName": "update",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "entityAddress",
          "type": "address"
        },
        {
          "name": "UniqueID",
          "type": "uint256"
        }
      ],
      "name": "_writeownership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "entity",
          "type": "address"
        }
      ],
      "name": "getRole",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "entityAddress",
          "type": "address"
        },
        {
          "name": "entityData",
          "type": "string"
        }
      ],
      "name": "Mint",
      "outputs": [
        {
          "name": "_UniqueID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "entityAddress",
          "type": "address"
        },
        {
          "name": "entityData",
          "type": "string"
        },
        {
          "name": "UniqueID",
          "type": "uint256"
        }
      ],
      "name": "_writedata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numTokensTotal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "Owner",
          "type": "address"
        },
        {
          "name": "uniqueID",
          "type": "uint256"
        }
      ],
      "name": "_removetoken",
      "outputs": [
        {
          "name": "list",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rolevalue",
          "type": "uint8"
        },
        {
          "name": "entity",
          "type": "address"
        }
      ],
      "name": "setRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "state",
          "type": "string"
        }
      ],
      "name": "UpdateToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "state",
          "type": "string"
        }
      ],
      "name": "updatetoken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260028081111561001057fe5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561006957fe5b0217905550611e558061007d6000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303ad4be31461010157806306fdde0314610146578063081812fc146101d6578063095ea7b31461024357806323b872dd14610283578063263f842d146102e357806344276733146103305780634c2f6dd3146103955780636352211e146104045780636d2d7a0d1461047157806370a082311461050457806395d89b411461055b578063a22cb465146105eb578063af129dc21461063a578063c87b56dd14610665578063cb126ab61461070b578063e985e9c51461076c578063f2e12a39146107e7575b600080fd5b34801561010d57600080fd5b5061014460048036038101908080359060200190929190803590602001908201803590602001919091929391929390505050610837565b005b34801561015257600080fd5b5061015b610a8b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019b578082015181840152602081019050610180565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e257600080fd5b5061020160048036038101908080359060200190929190505050610ac8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610281600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b3b565b005b6102e1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dcd565b005b3480156102ef57600080fd5b5061032e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061111d565b005b34801561033c57600080fd5b50610371600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611239565b6040518082600281111561038157fe5b60ff16815260200191505060405180910390f35b3480156103a157600080fd5b506103ee600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190820180359060200191909192939192939050505061128e565b6040518082815260200191505060405180910390f35b34801561041057600080fd5b5061042f6004803603810190808035906020019092919050505061133f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047d57600080fd5b50610502600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505061137c565b005b34801561051057600080fd5b50610545600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061142d565b6040518082815260200191505060405180910390f35b34801561056757600080fd5b50610570611479565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105b0578082015181840152602081019050610595565b50505050905090810190601f1680156105dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105f757600080fd5b50610638600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506114b6565b005b34801561064657600080fd5b5061064f611589565b6040518082815260200191505060405180910390f35b34801561067157600080fd5b506106906004803603810190808035906020019092919050505061158f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561071757600080fd5b50610756600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611647565b6040518082815260200191505060405180910390f35b34801561077857600080fd5b506107cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061186c565b604051808215151515815260200191505060405180910390f35b3480156107f357600080fd5b50610835600480360381019080803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611900565b005b61083f611d3e565b60018060ff1661084e33611239565b600281111561085957fe5b60ff1614151561086857600080fd5b6108a384848080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505061199b565b91506108fd6108f86108e96040805190810160405280600181526020017f2e0000000000000000000000000000000000000000000000000000000000000081525061199b565b846119c990919063ffffffff16565b6119e3565b600260008781526020019081526020016000206004019080519060200190610926929190611d58565b5061097f61097a61096b6040805190810160405280600181526020017f2e0000000000000000000000000000000000000000000000000000000000000081525061199b565b846119c990919063ffffffff16565b6119e3565b6002600087815260200190815260200160002060020190805190602001906109a8929190611d58565b50610a016109fc6109ed6040805190810160405280600181526020017f2e0000000000000000000000000000000000000000000000000000000000000081525061199b565b846119c990919063ffffffff16565b6119e3565b600260008781526020019081526020016000206003019080519060200190610a2a929190611d58565b507f53560fd2a0eb35afd8d535363033618f52ccbfc857a7bf616eb195a0ed022ef485858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a15050505050565b60606040805190810160405280601181526020017f666c6f776572746f6b656e735f74657374000000000000000000000000000000815250905090565b6000600115156002600084815260200190815260200160002060010160009054906101000a900460ff161515141515610b0057600080fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600115156002600083815260200190815260200160002060010160009054906101000a900460ff161515141515610b7157600080fd5b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c9e575060011515600760006004600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b1515610ca957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610cca82611a45565b73ffffffffffffffffffffffffffffffffffffffff16141580610d1a5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610dc957610d298282611a82565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15b5050565b600115156002600083815260200190815260200160002060010160009054906101000a900460ff161515141515610e0357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f30575060011515600760006004600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b1515610f3b57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610fa857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fe457600080fd5b610fef838383611ad8565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583600083604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a17fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036005600083815260200190815260200160002081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060028060ff166112a033611239565b60028111156112ab57fe5b60ff161415156112ba57600080fd5b6112cf60018054611afb90919063ffffffff16565b91506112db868361111d565b6113188686868080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050508461137c565b61132d60018054611afb90919063ffffffff16565b60018190555081925050509392505050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b816002600083815260200190815260200160002060000190805190602001906113a6929190611d58565b5060016002600083815260200190815260200160002060010160006101000a81548160ff021916908315150217905550826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60606040805190810160405280600381526020017f5454540000000000000000000000000000000000000000000000000000000000815250905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114f157600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60015481565b6060600260008381526020019081526020016000206000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561163b5780601f106116105761010080835404028352916020019161163b565b820191906000526020600020905b81548152906001019060200180831161161e57829003601f168201915b50505050509050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff166004600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156116b957600080fd5b60056000858152602001908152602001600020549150600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500381548110151561176057fe5b9060005260206000200154905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156117ba57fe5b906000526020600020018190555060009050600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361181e9190611dd8565b50600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509250505092915050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60028060ff1661190f33611239565b600281111561191a57fe5b60ff1614151561192957600080fd5b8260ff16600281111561193857fe5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561199157fe5b0217905550505050565b6119a3611d3e565b600060208301905060408051908101604052808451815260200182815250915050919050565b6119d1611d3e565b6119dc838383611b19565b5092915050565b606080600083600001516040519080825280601f01601f191660200182016040528015611a1f5781602001602082028038833980820191505090505b509150602082019050611a3b8185602001518660000151611bb7565b8192505050919050565b60006006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611ae28382611647565b50611aec81611c02565b611af6828261111d565b505050565b6000808284019050838110151515611b0f57fe5b8091505092915050565b611b21611d3e565b6000611b3f8560000151866020015186600001518760200151611c58565b90508460200151836020018181525050846020015181038360000181815250508460000151856020015101811415611b81576000856000018181525050611bac565b8360000151836000015101856000018181510391508181525050836000015181018560200181815250505b829150509392505050565b60005b602082101515611bdf5782518452602084019350602083019250602082039150611bba565b6001826020036101000a0390508019835116818551168181178652505050505050565b60006006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060008060008060008b97508c8b111515611d285760208b111515611ce25760018b60200360080260020a03196001029550858a511694508a8d8d010393508588511692505b84600019168360001916141515611cda578388101515611cc7578c8c019850611d2e565b8780600101985050858851169250611ca3565b879850611d2e565b8a8a209150600096505b8a8d0387111515611d27578a88209050806000191682600019161415611d1457879850611d2e565b6001880197508680600101975050611cec565b5b8c8c0198505b5050505050505050949350505050565b604080519081016040528060008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d9957805160ff1916838001178555611dc7565b82800160010185558215611dc7579182015b82811115611dc6578251825591602001919060010190611dab565b5b509050611dd49190611e04565b5090565b815481835581811115611dff57818360005260206000209182019101611dfe9190611e04565b5b505050565b611e2691905b80821115611e22576000816000905550600101611e0a565b5090565b905600a165627a7a7230582011e0dacf51911579d8a29a22d04d788dc14d7d612bd3a769644c4c005c5213960029",
  "deployedBytecode": "",
  "sourceMap": "99:598:7:-;;;583:1:2;578:7;;;;;;;;552:11;:23;564:10;552:23;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;99:598:7;;;;;;",
  "deployedSourceMap": "99:598:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:420;;8:9:-1;5:2;;;30:1;27;20:12;5:2;275:420:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4675:87:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4675:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4675:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3789:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3789:169:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:617;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:261;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1148:261:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:100:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;719:100:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5053:316:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5053:316:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2167:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2167:108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:127:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4764:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4764:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4764:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3494:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3494:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;179:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:26:6;;;;;;;;;;;;;;;;;;;;;;;4843:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4843:117:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4843:117:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:603;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:603:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3647:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:115:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;598:115:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:420:7;351:5;;:::i;:::-;343:1;901:4:2;871:34;;877:19;885:10;877:7;:19::i;:::-;871:26;;;;;;;;:34;;;863:43;;;;;;;;359:15:7;:5;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15::i;:::-;351:23;;407:33;:22;415:13;:11;;;;;;;;;;;;;;;;;;;:13::i;:::-;407:1;:7;;:22;;;;:::i;:::-;:31;:33::i;:::-;380:7;:17;388:8;380:17;;;;;;;;;;;:24;;:60;;;;;;;;;;;;:::i;:::-;;509:33;:22;517:13;:11;;;;;;;;;;;;;;;;;;;:13::i;:::-;509:1;:7;;:22;;;;:::i;:::-;:31;:33::i;:::-;482:7;:17;490:8;482:17;;;;;;;;;;;:24;;:60;;;;;;;;;;;;:::i;:::-;;615:33;:22;623:13;:11;;;;;;;;;;;;;;;;;;;:13::i;:::-;615:1;:7;;:22;;;;:::i;:::-;:31;:33::i;:::-;586:7;:17;594:8;586:17;;;;;;;;;;;:26;;:62;;;;;;;;;;;;:::i;:::-;;660:28;672:8;682:5;;660:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:420;;;;;:::o;4675:87:6:-;4714:12;4733:26;;;;;;;;;;;;;;;;;;;;4675:87;:::o;3789:169::-;3851:7;3903:4;3874:33;;:7;:17;3882:8;3874:17;;;;;;;;;;;:26;;;;;;;;;;;;:33;;;3865:43;;;;;;;;3921:24;:34;3946:8;3921:34;;;;;;;;;;;;;;;;;;;;;3914:41;;3789:169;;;:::o;2873:617::-;2987:4;2958:33;;:7;:17;2966:8;2958:17;;;;;;;;;;;:26;;;;;;;;;;;;:33;;;2949:43;;;;;;;;3113:15;:25;3129:8;3113:25;;;;;;;;;;;;;;;;;;;;;3099:39;;:10;:39;;;:106;;;;3201:4;3142:63;;:15;:42;3158:15;:25;3174:8;3158:25;;;;;;;;;;;;;;;;;;;;;3142:42;;;;;;;;;;;;;;;:54;3185:10;3142:54;;;;;;;;;;;;;;;;;;;;;;;;;:63;;;3099:106;3091:116;;;;;;;;3343:1;3309:36;;:22;3322:8;3309:12;:22::i;:::-;:36;;;;:63;;;;3370:1;3349:23;;:9;:23;;;;3309:63;3305:183;;;3388:29;3397:9;3408:8;3388;:29::i;:::-;3436:41;3445:10;3457:9;3468:8;3436:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:183;2873:617;;:::o;2279:591::-;2407:4;2378:33;;:7;:17;2386:8;2378:17;;;;;;;;;;;:26;;;;;;;;;;;;:33;;;2369:43;;;;;;;;2464:10;2426:48;;:24;:34;2451:8;2426:34;;;;;;;;;;;;;;;;;;;;;:48;;;:115;;;;2537:4;2478:63;;:15;:42;2494:15;:25;2510:8;2494:25;;;;;;;;;;;;;;;;;;;;;2478:42;;;;;;;;;;;;;;;:54;2521:10;2478:54;;;;;;;;;;;;;;;;;;;;;;;;;:63;;;2426:115;2418:125;;;;;;;;2698:5;2669:34;;:15;:25;2685:8;2669:25;;;;;;;;;;;;;;;;;;;;;:34;;;2661:43;;;;;;;;2733:1;2718:17;;:3;:17;;;;2710:26;;;;;;;;2743:39;2761:5;2768:3;2773:8;2743:17;:39::i;:::-;2794:28;2803:5;2810:1;2813:8;2794:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:30;2842:5;2849:3;2854:8;2833:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:591;;;:::o;1148:261::-;1228:20;:35;1249:13;1228:35;;;;;;;;;;;;;;;1269:8;1228:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1228:50:6;;;;;;;;;;;;;;;;;;;;;;1355:1;1312:20;:35;1333:13;1312:35;;;;;;;;;;;;;;;:42;;;;:44;1284:15;:25;1300:8;1284:25;;;;;;;;;;;:72;;;;1389:13;1362:15;:25;1378:8;1362:25;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1148:261;;:::o;719:100:2:-;771:4;793:11;:19;805:6;793:19;;;;;;;;;;;;;;;;;;;;;;;;;786:26;;719:100;;;:::o;5053:316:6:-;5136:17;5161:16;5124:1;901:4:2;871:34;;877:19;885:10;877:7;:19::i;:::-;871:26;;;;;;;;:34;;;863:43;;;;;;;;5180:21:6;5199:1;5180:14;;:18;;:21;;;;:::i;:::-;5161:40;;5208:39;5224:13;5238:8;5208:15;:39::i;:::-;5253:45;5264:13;5278:10;;5253:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5289:8;5253:10;:45::i;:::-;5320:21;5339:1;5320:14;;:18;;:21;;;;:::i;:::-;5304:14;:37;;;;5354:8;5347:15;;5053:316;;;;;;;:::o;2167:108::-;2225:7;2246:15;:25;2262:8;2246:25;;;;;;;;;;;;;;;;;;;;;2239:32;;2167:108;;;:::o;915:230::-;1044:10;1007:7;:17;1015:8;1007:17;;;;;;;;;;;:34;;:47;;;;;;;;;;;;:::i;:::-;;1089:4;1060:7;:17;1068:8;1060:17;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;1125:13;1099:15;:25;1115:8;1099:25;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;915:230;;;:::o;2037:127::-;2095:15;2124:20;:28;2145:6;2124:28;;;;;;;;;;;;;;;:35;;;;2117:42;;2037:127;;;:::o;4764:77::-;4805:14;4826:12;;;;;;;;;;;;;;;;;;;;4764:77;:::o;3494:150::-;3580:10;3573:17;;:3;:17;;;;3565:26;;;;;;;;3632:9;3597:15;:27;3613:10;3597:27;;;;;;;;;;;;;;;:32;3625:3;3597:32;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;3494:150;;:::o;179:26::-;;;;:::o;4843:117::-;4902:6;4922:7;:17;4930:8;4922:17;;;;;;;;;;;:34;;4915:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4843:117;;;:::o;1411:603::-;1481:12;1584:16;1687:19;1538:5;1509:34;;:15;:25;1525:8;1509:25;;;;;;;;;;;;;;;;;;;;;:34;;;1500:44;;;;;;;;1603:15;:25;1619:8;1603:25;;;;;;;;;;;;1584:44;;1709:20;:27;1730:5;1709:27;;;;;;;;;;;;;;;1772:1;1737:20;:27;1758:5;1737:27;;;;;;;;;;;;;;;:34;;;;:36;1709:65;;;;;;;;;;;;;;;;;;1687:87;;1820:11;1780:20;:27;1801:5;1780:27;;;;;;;;;;;;;;;1808:8;1780:37;;;;;;;;;;;;;;;;;:51;;;;1877:18;;;1924:20;:27;1945:5;1924:27;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:::i;:::-;;1973:20;:27;1994:5;1973:27;;;;;;;;;;;;;;;:34;;;;1966:41;;1411:603;;;;;;:::o;3647:139::-;3731:4;3749:15;:23;3765:6;3749:23;;;;;;;;;;;;;;;:34;3773:9;3749:34;;;;;;;;;;;;;;;;;;;;;;;;;3742:41;;3647:139;;;;:::o;598:115:2:-;661:1;901:4;871:34;;877:19;885:10;877:7;:19::i;:::-;871:26;;;;;;;;:34;;;863:43;;;;;;;;696:9;691:15;;;;;;;;;;669:11;:19;681:6;669:19;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;598:115;;;:::o;2864:196:5:-;2917:5;;:::i;:::-;2934:8;2992:4;2986;2982:15;2975:22;;3023:30;;;;;;;;;3035:4;3029:18;3023:30;;;;3049:3;3023:30;;;3016:37;;2864:196;;;;:::o;20537:120::-;20601:11;;:::i;:::-;20624:26;20630:4;20636:6;20644:5;20624;:26::i;:::-;;20537:120;;;;:::o;5173:251::-;5226:6;5244:17;5295:11;5275:4;:9;;;5264:21;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5264:21:5;;;;5244:41;;5346:2;5341:3;5337:12;5327:22;;5361:36;5368:6;5376:4;:9;;;5387:4;:9;;;5361:6;:36::i;:::-;5414:3;5407:10;;5173:251;;;;;:::o;4186:135:6:-;4249:17;4280:24;:34;4305:8;4280:34;;;;;;;;;;;;;;;;;;;;;4273:41;;4186:135;;;:::o;4324:109::-;4423:3;4386:24;:34;4411:8;4386:34;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4324:109;;:::o;3985:198::-;4075:28;4088:5;4094:8;4075:12;:28::i;:::-;;4109:29;4129:8;4109:19;:29::i;:::-;4144:34;4160:8;4169;4144:15;:34::i;:::-;3985:198;;;:::o;697:129:1:-;755:7;770:9;786:1;782;:5;770:17;;805:1;800;:6;;793:14;;;;;;820:1;813:8;;697:129;;;;;:::o;19590:476:5:-;19667:5;;:::i;:::-;19684:8;19695:55;19703:4;:9;;;19714:4;:9;;;19725:6;:11;;;19738:6;:11;;;19695:7;:55::i;:::-;19684:66;;19773:4;:9;;;19760:5;:10;;:22;;;;;19811:4;:9;;;19805:3;:15;19792:5;:10;;:28;;;;;19853:4;:9;;;19841:4;:9;;;:21;19834:3;:28;19830:208;;;19915:1;19903:4;:9;;:13;;;;;19830:208;;;19973:6;:11;;;19960:5;:10;;;:24;19947:4;:9;;:37;;;;;;;;;;;20016:6;:11;;;20010:3;:17;19998:4;:9;;:29;;;;;19830:208;20054:5;20047:12;;19590:476;;;;;;:::o;2116:548::-;2442:9;2236:164;2249:2;2242:3;:9;;2236:164;;;2324:3;2318:10;2312:4;2305:24;2364:2;2356:10;;;;2387:2;2380:9;;;;2260:2;2253:9;;;;2236:164;;;2474:1;2467:3;2462:2;:8;2454:3;:17;:21;2442:33;;2543:4;2539:9;2533:3;2527:10;2523:26;2595:4;2588;2582:11;2578:22;2639:7;2629:8;2626:21;2620:4;2613:35;2494:164;;;;;;:::o;4436:114:6:-;4541:1;4496:24;:34;4521:8;4496:34;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;4436:114;:::o;15058:1362:5:-;15157:4;15173:8;15201;15299:12;15376:18;15484:8;15542:15;15981:12;16147:16;15184:7;15173:18;;15237:7;15224:9;:20;;15220:1160;;;15277:2;15264:9;:15;;15260:1110;;;15354:1;15340:9;15335:2;:14;15330:1;:20;15324:1;:27;:31;15322:34;15314:43;;15299:58;;15459:4;15447:9;15441:16;15437:27;15423:41;;15515:9;15505:7;15495;:17;:29;15484:40;;15613:4;15607:3;15601:10;15597:21;15586:32;;15638:228;15656:10;15645:21;;;:7;:21;;;;;15638:228;;;15701:3;15694;:10;;15690:64;;;15747:7;15737;:17;15730:24;;;;15690:64;15776:5;;;;;;;15841:4;15835:3;15829:10;15825:21;15814:32;;15812:36;;;15890:3;15883:10;;;;15260:1110;16046:9;16035;16030:26;16022:34;;16087:1;16081:7;;16076:280;16107:9;16097:7;:19;16090:3;:26;;16076:280;;;16218:9;16213:3;16208:20;16196:32;;16263:8;16255:16;;;:4;:16;;;;16251:56;;;16304:3;16297:10;;;;16251:56;16336:1;16329:8;;;;16118:5;;;;;;;16076:280;;;15220:1160;16406:7;16396;:17;16389:24;;15058:1362;;;;;;;;;;;;;;;:::o;99:598:7:-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\nimport './SafeMath.sol';\nimport './testreg.sol';\nimport './strings.sol';\n\ncontract update is testreg{\n\n    using strings for *;\n\n    event UpdateToken(uint256 _tokenId, string state);  /// \"0,05.good.0\"   1.Height  2.Health  3. Boolean Blooming\n\n    function updatetoken(uint256 _tokenId, string state) external check(1){\n    var s = state.toSlice();\n    TokenId[_tokenId].height = s.split(\".\".toSlice()).toString();   // part and return value is \"www\"\n    TokenId[_tokenId].health = s.split(\".\".toSlice()).toString();  // part and return value is \"google\"\n    TokenId[_tokenId].blooming = s.split(\".\".toSlice()).toString();\n\n    emit UpdateToken(_tokenId, state);\n    }\n}\n",
  "sourcePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/update.sol",
  "ast": {
    "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/update.sol",
    "exportedSymbols": {
      "update": [
        3158
      ]
    },
    "id": 3159,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3081,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 3082,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 196,
        "src": "25:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/testreg.sol",
        "file": "./testreg.sol",
        "id": 3083,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 3080,
        "src": "50:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/strings.sol",
        "file": "./strings.sol",
        "id": 3084,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 2524,
        "src": "74:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3085,
              "name": "testreg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3079,
              "src": "118:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_testreg_$3079",
                "typeString": "contract testreg"
              }
            },
            "id": 3086,
            "nodeType": "InheritanceSpecifier",
            "src": "118:7:7"
          }
        ],
        "contractDependencies": [
          79,
          97,
          267,
          3079
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3158,
        "linearizedBaseContracts": [
          3158,
          3079,
          267,
          97,
          79
        ],
        "name": "update",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3088,
            "libraryName": {
              "contractScope": null,
              "id": 3087,
              "name": "strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2523,
              "src": "138:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_strings_$2523",
                "typeString": "library strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "132:20:7",
            "typeName": null
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3094,
            "name": "UpdateToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3090,
                  "indexed": false,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "176:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3092,
                  "indexed": false,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "194:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "175:32:7"
            },
            "src": "158:50:7"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "345:350:7",
              "statements": [
                {
                  "assignments": [
                    3104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3104,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 3157,
                      "src": "351:5:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": null,
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3105,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "359:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "id": 3106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "359:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "351:23:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3109,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "380:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3111,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3110,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "388:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "380:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "height",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2573,
                      "src": "380:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "415:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "415:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "415:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3113,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "407:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3114,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "407:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "407:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "407:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "407:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "380:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3122,
                  "nodeType": "ExpressionStatement",
                  "src": "380:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3123,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "482:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3125,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3124,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "490:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "482:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "health",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2569,
                      "src": "482:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "517:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "517:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "517:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3127,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "509:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "509:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "509:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "509:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "509:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "482:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "482:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3137,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "586:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3139,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3138,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "594:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "586:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blooming",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2571,
                      "src": "586:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "623:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "623:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "623:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3141,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "615:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "615:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "615:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "615:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "586:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "586:62:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3152,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3096,
                        "src": "672:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3153,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "682:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3151,
                      "name": "UpdateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3094,
                      "src": "660:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3155,
                  "nodeType": "EmitStatement",
                  "src": "655:33:7"
                }
              ]
            },
            "documentation": "\"0,05.good.0\"   1.Height  2.Health  3. Boolean Blooming",
            "id": 3157,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "343:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 3102,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3100,
                  "name": "check",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 266,
                  "src": "337:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint8_$",
                    "typeString": "modifier (uint8)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "337:8:7"
              }
            ],
            "name": "updatetoken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "296:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3098,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "314:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3097,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:32:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:7"
            },
            "scope": 3158,
            "src": "275:420:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3159,
        "src": "99:598:7"
      }
    ],
    "src": "0:698:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/update.sol",
    "exportedSymbols": {
      "update": [
        3158
      ]
    },
    "id": 3159,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3081,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 3082,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 196,
        "src": "25:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/testreg.sol",
        "file": "./testreg.sol",
        "id": 3083,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 3080,
        "src": "50:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mfahampshire/terra0/source/ERC721/contracts/strings.sol",
        "file": "./strings.sol",
        "id": 3084,
        "nodeType": "ImportDirective",
        "scope": 3159,
        "sourceUnit": 2524,
        "src": "74:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3085,
              "name": "testreg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3079,
              "src": "118:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_testreg_$3079",
                "typeString": "contract testreg"
              }
            },
            "id": 3086,
            "nodeType": "InheritanceSpecifier",
            "src": "118:7:7"
          }
        ],
        "contractDependencies": [
          79,
          97,
          267,
          3079
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3158,
        "linearizedBaseContracts": [
          3158,
          3079,
          267,
          97,
          79
        ],
        "name": "update",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3088,
            "libraryName": {
              "contractScope": null,
              "id": 3087,
              "name": "strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2523,
              "src": "138:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_strings_$2523",
                "typeString": "library strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "132:20:7",
            "typeName": null
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3094,
            "name": "UpdateToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3090,
                  "indexed": false,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "176:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3092,
                  "indexed": false,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 3094,
                  "src": "194:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "175:32:7"
            },
            "src": "158:50:7"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "345:350:7",
              "statements": [
                {
                  "assignments": [
                    3104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3104,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 3157,
                      "src": "351:5:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": null,
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3105,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "359:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "id": 3106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 903,
                      "src": "359:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "351:23:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3109,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "380:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3111,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3110,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "388:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "380:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "height",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2573,
                      "src": "380:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "415:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "415:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "415:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3113,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "407:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3114,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "407:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "407:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "407:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "407:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "380:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3122,
                  "nodeType": "ExpressionStatement",
                  "src": "380:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3123,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "482:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3125,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3124,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "490:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "482:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "health",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2569,
                      "src": "482:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "517:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "517:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "517:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3127,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "509:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "509:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "509:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "509:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "509:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "482:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "482:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3137,
                          "name": "TokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2578,
                          "src": "586:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenStruct_$2574_storage_$",
                            "typeString": "mapping(uint256 => struct testreg.TokenStruct storage ref)"
                          }
                        },
                        "id": 3139,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3138,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "594:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "586:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenStruct_$2574_storage",
                          "typeString": "struct testreg.TokenStruct storage ref"
                        }
                      },
                      "id": 3140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blooming",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2571,
                      "src": "586:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "2e",
                                  "id": 3143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "623:3:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 3144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "623:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 3145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "623:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3141,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3104,
                              "src": "615:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 3142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2194,
                            "src": "615:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$_t_struct$_slice_$843_memory_ptr_$returns$_t_struct$_slice_$843_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$843_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1081,
                        "src": "615:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$843_memory_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_slice_$843_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "615:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "586:62:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "586:62:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3152,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3096,
                        "src": "672:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3153,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "682:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3151,
                      "name": "UpdateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3094,
                      "src": "660:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3155,
                  "nodeType": "EmitStatement",
                  "src": "655:33:7"
                }
              ]
            },
            "documentation": "\"0,05.good.0\"   1.Height  2.Health  3. Boolean Blooming",
            "id": 3157,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "343:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 3102,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3100,
                  "name": "check",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 266,
                  "src": "337:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint8_$",
                    "typeString": "modifier (uint8)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "337:8:7"
              }
            ],
            "name": "updatetoken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "296:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3098,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "314:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3097,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:32:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:7"
            },
            "scope": 3158,
            "src": "275:420:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3159,
        "src": "99:598:7"
      }
    ],
    "src": "0:698:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1526201028475": {
      "events": {},
      "links": {},
      "address": "0xa89fe39d6bbf0492844a93d8e6ba44bf35c9a70f",
      "transactionHash": "0x13c2d68037079f88de00eb94d7d57f02f4aeb4fd3d318e1a38cbeffc8cf2f5bd"
    },
    "1526211119657": {
      "events": {},
      "links": {},
      "address": "0x786adbee31ae97d0e63a5ce38f7ca0399ff16a56",
      "transactionHash": "0x604c294a000da31f545cfd342a6abee929109a023d464025acb987dc9ee6f26d"
    },
    "1526216884093": {
      "events": {},
      "links": {},
      "address": "0x383580ae1928e9f0176e0af13f89bd84b44cd94c",
      "transactionHash": "0x604c294a000da31f545cfd342a6abee929109a023d464025acb987dc9ee6f26d"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-13T13:08:58.428Z"
}